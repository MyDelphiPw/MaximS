unit TestuPareto;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, uPareto, System.Generics.Collections;

type

  // Test methods for class TPareto

  TestTPareto = class(TTestCase)
  strict private
    FPareto: TPareto;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure Несравнимые_Одинаковые_Значения;
    procedure Несравнимые_Значения;
    procedure А_Больше_Б;
    procedure Б_Больше_А;
    procedure МерскаяЗадачаСравнение;
    procedure МерскаяЗадача;
    procedure Задача_В_Универе;
    procedure Вязка_Элементов;
  end;

implementation

{ TestTPareto }

procedure TestTPareto.SetUp;
begin
  inherited SetUp;
  FPareto := TPareto.Create;
end;

procedure TestTPareto.TearDown;
begin

  inherited TearDown;
  FPareto.Free;
  FPareto := nil;
end;

procedure TestTPareto.А_Больше_Б;
begin
  FPareto.AddRange([ //
    TParetoItem.Create(3, 4, 'A1'), TParetoItem.Create(1, 3, 'A2')]);
  CheckEquals(FPareto.Compare(0, 1), 1);
  FPareto.Clear;
end;

procedure TestTPareto.Б_Больше_А;
begin
  FPareto.AddRange([ //
    TParetoItem.Create(1, 2, 'A1'), TParetoItem.Create(1, 3, 'A2')]);
  CheckEquals(FPareto.Compare(0, 1), -1);
  FPareto.Clear;
end;

procedure TestTPareto.Вязка_Элементов;
begin
  CheckEquals(Length(TPareto.WebElement([1, 3, 5, 6])), 6);
end;

procedure TestTPareto.Задача_В_Универе;
begin
  FPareto.MaxB := false;
  FPareto.AddRange([ //
    TParetoItem.Create(58, 14, 'A1'), //
    TParetoItem.Create(58, 18.3, 'A2'), //
    TParetoItem.Create(57, 7.8, 'A3'), //
    TParetoItem.Create(56, 9.2, 'A4'), //
    TParetoItem.Create(55, 10, 'A5'), //
    TParetoItem.Create(62.5, 15.2, 'A6')
    { } ]);
  // CheckEquals(FPareto.Compare(0, 3), 1);
  CheckEquals(FPareto.Compress, 3);
  FPareto.Clear;
end;

procedure TestTPareto.МерскаяЗадача;
begin
  FPareto.MaxB := false;
  FPareto.AddRange([ //
    TParetoItem.Create(4, 4.2, 'A1'), //
    TParetoItem.Create(2.9, 3.3, 'A2'), //
    TParetoItem.Create(1.9, 2.2, 'A3'), //
    TParetoItem.Create(3.35, 4.2, 'A4')
    { } ]);
  CheckEquals(FPareto.Compare(0, 3), 1);
  CheckEquals(FPareto.Compress, 3);
  FPareto.Clear;
end;

procedure TestTPareto.МерскаяЗадачаСравнение;
begin
  FPareto.AddRange([ //
    TParetoItem.Create(3, 1, 'A1'), TParetoItem.Create(1, 3, 'A2')]);
  CheckEquals(FPareto.Compare(0, 1), 0);
  FPareto.Clear;
end;

procedure TestTPareto.Несравнимые_Значения;
begin
  FPareto.MaxB := false;
  FPareto.AddRange([ //
    TParetoItem.Create(4, 4.2, 'A1'), TParetoItem.Create(3.35, 4.2, 'A2')]);
  CheckEquals(FPareto.Compare(0, 1), 1);
  FPareto.Clear;
end;

procedure TestTPareto.Несравнимые_Одинаковые_Значения;
begin
  FPareto.AddRange([TParetoItem.Create(1, 1, 'A1'), TParetoItem.Create(1,
    1, 'A2')]);
  CheckEquals(FPareto.Compare(0, 1), 0);
  FPareto.MaxA := false;
  CheckEquals(FPareto.Compare(0, 1), 0);
  FPareto.MaxB := false;
  CheckEquals(FPareto.Compare(0, 1), 0);
  FPareto.Clear;
end;

initialization

// Register any test cases with the test runner
RegisterTest(TestTPareto.Suite);

end.
